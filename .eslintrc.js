/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "extends": [
        "plugin:@typescript-eslint/all",
        "plugin:react/recommended",
        "prettier",
        "prettier/@typescript-eslint"
    ],
    "noInlineConfig": false,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "eslint-plugin-prefer-arrow",
        "eslint-plugin-import",
        "eslint-plugin-no-null",
        "eslint-plugin-unicorn",
        "eslint-plugin-jsdoc",
        "eslint-plugin-react",
        "@typescript-eslint",
        "@typescript-eslint/tslint"
    ],
    "reportUnusedDisableDirectives": true,
    "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": [
            "error",
            {
                "default": "array"
            }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/ban-types": [
            "error",
            {
                "types": {
                    "Object": null,
                    "String": null,
                    "Number": null
                }
            }
        ],
        "@typescript-eslint/brace-style": [
            "error",
            "1tbs",
            {
                "allowSingleLine": true
            }
        ],
        "@typescript-eslint/class-literal-property-style": [
            "error",
            "fields"
        ],
        "@typescript-eslint/comma-dangle": [
            "error",
            {
                "arrays": "always-multiline",
                "objects": "always-multiline",
                "imports": "always-multiline",
                "exports": "always-multiline",
                "functions": "always-multiline",
                "enums": "always-multiline",
                "generics": "always-multiline",
                "tuples": "always-multiline"
            }
        ],
        "@typescript-eslint/comma-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "@typescript-eslint/consistent-indexed-object-style": [
            "error",
            "record"
        ],
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/consistent-type-imports": "off",
        "@typescript-eslint/default-param-last": "off",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                "accessibility": "explicit",
                "overrides": {
                    "accessors": "explicit",
                    "parameterProperties": "explicit"
                }
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/func-call-spacing": [
            "error",
            "never"
        ],
        "@typescript-eslint/indent": "error",
        "@typescript-eslint/init-declarations": "off",
        "@typescript-eslint/keyword-spacing": [
            "error",
            {
                "before": true,
                "after": true
            }
        ],
        "@typescript-eslint/lines-between-class-members": [
            "error",
            "always",
            {
                "exceptAfterOverload": true,
                "exceptAfterSingleLine": true
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "none",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/method-signature-style": [
            "error",
            "method"
        ],
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-base-to-string": "off",
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-confusing-void-expression": [
            "error",
            {
                "ignoreArrowShorthand": true,
                "ignoreVoidOperator": true
            }
        ],
        "@typescript-eslint/no-dupe-class-members": "off",
        "@typescript-eslint/no-duplicate-imports": [
            "error",
            {
                "includeExports": false
            }
        ],
        "@typescript-eslint/no-dynamic-delete": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-parens": "off",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-extraneous-class": "error",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implicit-any-catch": [
            "error",
            {
                "allowExplicitAny": false
            }
        ],
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-invalid-this": [
            "error",
            {
                "capIsConstructor": false
            }
        ],
        "@typescript-eslint/no-invalid-void-type": "off",
        "@typescript-eslint/no-loop-func": "off",
        "@typescript-eslint/no-loss-of-precision": "error",
        "@typescript-eslint/no-magic-numbers": [
            "error",
            {
                "ignore": [
                    -1,
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                "ignoreArrayIndexes": false,
                "ignoreDefaultValues": true,
                "enforceConst": true,
                "detectObjects": false,
                "ignoreEnums": true,
                "ignoreNumericLiteralTypes": true,
                "ignoreReadonlyClassProperties": true
            }
        ],
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "checksVoidReturn": false,
                "checksConditionals": true
            }
        ],
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-param-reassign": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-redeclare": [
            "error",
            {
                "builtinGlobals": true,
                "ignoreDeclarationMerge": true
            }
        ],
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-shadow": [
            "error",
            {
                "hoist": "all"
            }
        ],
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-type-alias": "off",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-condition": "off",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-unused-expressions": [
            "error",
            {
                "allowShortCircuit": true
            }
        ],
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "error",
        "@typescript-eslint/object-curly-spacing": [
            "error",
            "always",
            {
                "arraysInObjects": true,
                "objectsInObjects": true
            }
        ],
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-literal-enum-member": "off",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/prefer-regexp-exec": "off",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/prefer-ts-expect-error": "off",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/quotes": [
            "error",
            "single"
        ],
        "@typescript-eslint/require-array-sort-compare": [
            "error",
            {
                "ignoreStringArrays": true
            }
        ],
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": [
            "error",
            {
                "allowNumber": true,
                "allowBoolean": true,
                "allowAny": false,
                "allowNullish": false
            }
        ],
        "@typescript-eslint/return-await": [
            "error",
            "never"
        ],
        "@typescript-eslint/semi": [
            "error",
            null
        ],
        "@typescript-eslint/sort-type-union-intersection-members": [
            "error",
            {
                "checkIntersections": true,
                "checkUnions": true,
                "groupOrder": [
                    "named",
                    "keyword",
                    "operator",
                    "literal",
                    "function",
                    "import",
                    "conditional",
                    "object",
                    "tuple",
                    "intersection",
                    "union",
                    "nullish"
                ]
            }
        ],
        "@typescript-eslint/space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "@typescript-eslint/space-infix-ops": [
            "error",
            {
                "int32Hint": false
            }
        ],
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/triple-slash-reference": [
            "error",
            {
                "path": "always",
                "types": "prefer-import",
                "lib": "always"
            }
        ],
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/unified-signatures": "error",
        "accessor-pairs": "error",
        "array-bracket-spacing": [
            "error",
            "never",
            {
                "singleValue": false,
                "objectsInArrays": false,
                "arraysInArrays": false
            }
        ],
        "array-callback-return": [
            "error",
            {
                "allowImplicit": false,
                "checkForEach": false
            }
        ],
        "arrow-body-style": [
            "error",
            "always"
        ],
        "arrow-parens": [
            "error",
            "as-needed"
        ],
        "block-scoped-var": "off",
        "block-spacing": [
            "error",
            "always"
        ],
        "brace-style": [
            "error",
            "1tbs"
        ],
        "class-methods-use-this": "off",
        "comma-dangle": "error",
        "comma-spacing": "off",
        "complexity": "off",
        "computed-property-spacing": [
            "error",
            "never",
            {
                "enforceForClassMembers": true
            }
        ],
        "consistent-return": "off",
        "constructor-super": "error",
        "curly": [
            "error",
            "multi-line"
        ],
        "default-case": "off",
        "default-param-last": "off",
        "dot-notation": "off",
        "eol-last": "error",
        "eqeqeq": [
            "error",
            "smart"
        ],
        "for-direction": "error",
        "func-call-spacing": "off",
        "getter-return": "off",
        "guard-for-in": "off",
        "header/header": [
            "error",
            "block",
            {
                "pattern": "^\\*\n \\* @Creater .+\n \\* @Desc .+(\n \\* @Detail(( |\n)(((?!\\* @).)|\n)+)?)?\n $"
            },
            0
        ],
        "id-blacklist": "off",
        "id-match": "off",
        "import/no-default-export": "off",
        "import/no-deprecated": "warn",
        "import/no-extraneous-dependencies": "error",
        "import/no-internal-modules": "error",
        "import/no-unassigned-import": "error",
        "import/order": "error",
        "indent": "off",
        "init-declarations": "off",
        "jsdoc/check-alignment": "error",
        "jsdoc/check-indentation": "error",
        "jsdoc/newline-after-description": "error",
        "jsdoc/no-types": "error",
        "keyword-spacing": "off",
        "linebreak-style": "error",
        "lines-between-class-members": "off",
        "max-classes-per-file": "off",
        "max-len": "off",
        "max-lines": "off",
        "new-parens": "error",
        "newline-per-chained-call": "off",
        "no-array-constructor": "off",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "off",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-console": "off",
        "no-constant-condition": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "off",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty": [
            "error",
            {
                "allowEmptyCatch": true
            }
        ],
        "no-empty-character-class": "error",
        "no-empty-function": "off",
        "no-eval": "error",
        "no-ex-assign": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": [
            "error",
            {
                "enforceForLogicalOperands": true
            }
        ],
        "no-extra-parens": "off",
        "no-extra-semi": "off",
        "no-fallthrough": "off",
        "no-func-assign": "error",
        "no-implied-eval": "off",
        "no-import-assign": "error",
        "no-inner-declarations": [
            "error",
            "both"
        ],
        "no-invalid-regexp": "error",
        "no-invalid-this": "off",
        "no-irregular-whitespace": "error",
        "no-loop-func": "off",
        "no-loss-of-precision": "off",
        "no-magic-numbers": [
            "error",
            {
                "ignore": [
                    -1,
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            }
        ],
        "no-misleading-character-class": "error",
        "no-multi-spaces": [
            "error",
            {
                "ignoreEOLComments": false,
                "exceptions": {
                    "Property": false
                }
            }
        ],
        "no-multiple-empty-lines": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-null/no-null": "off",
        "no-obj-calls": "error",
        "no-param-reassign": [
            "error",
            {
                "props": false
            }
        ],
        "no-plusplus": "error",
        "no-promise-executor-return": "error",
        "no-proto": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "off",
        "no-regex-spaces": "error",
        "no-restricted-globals": "error",
        "no-restricted-imports": "off",
        "no-restricted-syntax": [
            "off",
            "ForInStatement"
        ],
        "no-return-await": "error",
        "no-script-url": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-setter-return": "off",
        "no-shadow": "off",
        "no-sparse-arrays": "error",
        "no-tabs": [
            "error",
            {
                "allowIndentationTabs": false
            }
        ],
        "no-template-curly-in-string": "off",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-undef-init": "off",
        "no-underscore-dangle": "off",
        "no-unexpected-multiline": "error",
        "no-unreachable": "off",
        "no-unreachable-loop": [
            "error",
            {
                "ignore": []
            }
        ],
        "no-unsafe-finally": "error",
        "no-unsafe-negation": [
            "error",
            {
                "enforceForOrderingRelations": true
            }
        ],
        "no-unsafe-optional-chaining": "off",
        "no-unused-expressions": "off",
        "no-unused-labels": "error",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "no-useless-backreference": "error",
        "no-useless-constructor": "error",
        "no-var": "error",
        "no-void": "off",
        "object-curly-spacing": "off",
        "object-shorthand": "error",
        "one-var": [
            "error",
            "never"
        ],
        "padded-blocks": [
            "error",
            "never"
        ],
        "padding-line-between-statements": [
            "off",
            {
                "blankLine": "always",
                "prev": "*",
                "next": "return"
            }
        ],
        "prefer-arrow-callback": [
            "error",
            {
                "allowNamedFunctions": false,
                "allowUnboundThis": false
            }
        ],
        "prefer-arrow/prefer-arrow-functions": "off",
        "prefer-const": "error",
        "prefer-object-spread": "error",
        "prefer-template": "error",
        "quote-props": [
            "error",
            "as-needed"
        ],
        "quotes": "off",
        "radix": "off",
        "react/forbid-component-props": "off",
        "react/jsx-boolean-value": [
            "error",
            "never"
        ],
        "react/jsx-curly-spacing": [
            "error",
            {
                "when": "never"
            }
        ],
        "react/jsx-equals-spacing": [
            "error",
            "never"
        ],
        "react/jsx-key": "error",
        "react/jsx-no-bind": "error",
        "react/jsx-no-useless-fragment": "error",
        "react/jsx-tag-spacing": [
            "error",
            {
                "afterOpening": "allow",
                "closingSlash": "allow"
            }
        ],
        "react/jsx-wrap-multilines": "off",
        "react/no-string-refs": [
            "error",
            {
                "noTemplateLiterals": true
            }
        ],
        "react/self-closing-comp": "error",
        "require-atomic-updates": "off",
        "require-await": "off",
        "semi": "off",
        "space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "space-in-parens": [
            "error",
            "never"
        ],
        "space-infix-ops": "off",
        "spaced-comment": [
            "error",
            "always",
            {
                "markers": [
                    "/"
                ]
            }
        ],
        "unicorn/filename-case": "off",
        "use-isnan": "error",
        "valid-typeof": "off",
        "yoda": "error",
        "@typescript-eslint/tslint/config": [
            "error",
            {
                "rules": {
                    "array-bracket-spacing": [
                        true,
                        "never"
                    ],
                    "block-spacing": [
                        true,
                        "always"
                    ],
                    "encoding": true,
                    "file-header": [
                        true,
                        "@Creater .+\n \\* @Desc .+(\n \\* @Detail(( |\n)(((?!\\* @).)|\n)+)?)?\n $"
                    ],
                    "import-spacing": true,
                    "jsx-no-string-ref": true,
                    "no-empty-character-class": true,
                    "no-ex-assign": true,
                    "no-inferred-empty-object-type": true,
                    "no-inner-declarations": [
                        true,
                        "functions"
                    ],
                    "no-multi-spaces": [
                        true,
                        {
                            "exceptions": {
                                "VariableDeclaration": false,
                                "PropertyAssignment": false,
                                "BinaryExpression": false
                            }
                        }
                    ],
                    "no-promise-as-boolean": [
                        true,
                        {
                            "promise-classes": [
                                "Bluebird"
                            ]
                        }
                    ],
                    "no-restricted-globals": true,
                    "no-tautology-expression": true,
                    "no-unnecessary-callback-wrapper": true,
                    "no-unsafe-any": true,
                    "number-literal-format": true,
                    "object-curly-spacing": [
                        true,
                        "always"
                    ],
                    "prefer-method-signature": true,
                    "prefer-switch": [
                        true,
                        3
                    ],
                    "prefer-while": true,
                    "react-no-unnecessary-fragment": true,
                    "return-undefined": true,
                    "static-this": true,
                    "switch-final-break": true,
                    "ter-computed-property-spacing": [
                        true,
                        "never"
                    ],
                    "ter-func-call-spacing": [
                        true,
                        "never"
                    ],
                    "ter-indent": [
                        true,
                        4,
                        {
                            "SwitchCase": 1,
                            "VariableDeclarator": {
                                "var": 1,
                                "let": 1,
                                "const": 1
                            },
                            "outerIIFEBody": 1,
                            "MemberExpression": 1,
                            "FunctionDeclaration": {
                                "body": 1,
                                "parameters": 1
                            },
                            "FunctionExpression": {
                                "body": 1,
                                "parameters": 1
                            },
                            "CallExpression": {
                                "arguments": 1
                            }
                        }
                    ],
                    "ter-no-proto": true,
                    "ter-no-script-url": true,
                    "ter-no-self-compare": true,
                    "ter-no-tabs": true,
                    "ter-padded-blocks": [
                        true,
                        "never"
                    ],
                    "ter-prefer-arrow-callback": true,
                    "unnecessary-else": [
                        true,
                        {
                            "allow-else-if": true
                        }
                    ],
                    "whitespace": [
                        true,
                        "check-branch",
                        "check-decl",
                        "check-operator",
                        "check-module",
                        "check-preblock",
                        "check-separator",
                        "check-rest-spread",
                        "check-type",
                        "check-type-operator"
                    ]
                }
            }
        ]
    }
};
